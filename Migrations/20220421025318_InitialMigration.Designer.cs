// <auto-generated />
using System;
using KanbanAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KanbanAPI.Migrations
{
    [DbContext(typeof(KanbanDBContext))]
    [Migration("20220421025318_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KanbanAPI.Context.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPrevista")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TempoCorrido")
                        .HasColumnType("int");

                    b.Property<int>("TempoPrevisto")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "XYB-12345",
                            DataPrevista = new DateTime(2022, 4, 23, 23, 53, 17, 887, DateTimeKind.Local).AddTicks(8216),
                            Descricao = "Criação de relatórios para asdrubal company",
                            ProjetoId = 1,
                            Status = 0,
                            TempoCorrido = 0,
                            TempoPrevisto = 120,
                            Titulo = "Criar Relatório"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "XYA-12345",
                            DataPrevista = new DateTime(2022, 4, 22, 23, 53, 17, 888, DateTimeKind.Local).AddTicks(8572),
                            Descricao = "Criação de sofware sorteador de números para asdrubal company",
                            ProjetoId = 1,
                            Status = 0,
                            TempoCorrido = 0,
                            TempoPrevisto = 60,
                            Titulo = "Criar Sorteador"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "XYC-12345",
                            DataPrevista = new DateTime(2022, 4, 25, 23, 53, 17, 888, DateTimeKind.Local).AddTicks(8612),
                            Descricao = "Criação de listagem para asdrubal group",
                            ProjetoId = 2,
                            Status = 0,
                            TempoCorrido = 0,
                            TempoPrevisto = 60,
                            Titulo = "Criar Listagem"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "XYP-12345",
                            DataPrevista = new DateTime(2022, 4, 27, 23, 53, 17, 888, DateTimeKind.Local).AddTicks(8616),
                            Descricao = "Criação de paginação para asdrubal corp",
                            ProjetoId = 3,
                            Status = 0,
                            TempoCorrido = 0,
                            TempoPrevisto = 90,
                            Titulo = "Criar Paginação"
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colaborador");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mauro Guterres"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Afonso Solano"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Anderson Gaveta"
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Colaborador_Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Colaborador_Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            ColaboradorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            ColaboradorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CardId = 3,
                            ColaboradorId = 2
                        },
                        new
                        {
                            Id = 4,
                            CardId = 4,
                            ColaboradorId = 3
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Coluna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coluna");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aguardando"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Em Andamento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pendência"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Finalizado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Coluna_Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ColunaId")
                        .HasColumnType("int");

                    b.Property<int>("Posicao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.HasIndex("ColunaId");

                    b.ToTable("Coluna_Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            ColunaId = 1,
                            Posicao = 1
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            ColunaId = 1,
                            Posicao = 2
                        },
                        new
                        {
                            Id = 3,
                            CardId = 3,
                            ColunaId = 1,
                            Posicao = 3
                        },
                        new
                        {
                            Id = 4,
                            CardId = 4,
                            ColunaId = 1,
                            Posicao = 4
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projeto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Some Company"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Some Group"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Some Corp"
                        });
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Card", b =>
                {
                    b.HasOne("KanbanAPI.Context.Entities.Projeto", "Projeto")
                        .WithMany("Card")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Colaborador_Card", b =>
                {
                    b.HasOne("KanbanAPI.Context.Entities.Card", "Card")
                        .WithMany("Colaborador_Card")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanAPI.Context.Entities.Colaborador", "Colaborador")
                        .WithMany("Colaborador_Card")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Coluna_Card", b =>
                {
                    b.HasOne("KanbanAPI.Context.Entities.Card", "Card")
                        .WithOne("Coluna_Card")
                        .HasForeignKey("KanbanAPI.Context.Entities.Coluna_Card", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanAPI.Context.Entities.Coluna", "Coluna")
                        .WithMany("Coluna_Card")
                        .HasForeignKey("ColunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Coluna");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Card", b =>
                {
                    b.Navigation("Colaborador_Card");

                    b.Navigation("Coluna_Card");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Colaborador", b =>
                {
                    b.Navigation("Colaborador_Card");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Coluna", b =>
                {
                    b.Navigation("Coluna_Card");
                });

            modelBuilder.Entity("KanbanAPI.Context.Entities.Projeto", b =>
                {
                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
